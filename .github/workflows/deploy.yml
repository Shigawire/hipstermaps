name: Deployment
on:
  push:
    workflow_run:
      workflows: ["Test"]
      types: [completed]
env:
  SETOPS_PROJECT: "hipstermaps"
  SETOPS_WEB_APP: "web"
  SETOPS_WORKER_APP: "worker"
  SETOPS_CLIENT: "zweitag"
  DOCKER_BUILDKIT: 1

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 30
    outputs:
      app_env: ${{ steps.meta.outputs.app_env }}
      digest: ${{ steps.build_app.outputs.digest }}
    if: github.ref == 'refs/heads/production' || github.ref == 'refs/heads/master' || github.event_name == 'schedule'
    steps:
      - name: "Set up meta"
        id: meta
        run: |
          if [ "$GITHUB_REF" == "refs/heads/staging" ]; then
            APP_ENV=staging
          elif [ "$GITHUB_REF" == "refs/heads/production" ]; then
            APP_ENV=staging
          elif [ "$GITHUB_REF" == "refs/heads/master" ]; then
            APP_ENV=staging
          else
          echo "⚠️ Could not determine app env for branch ${{ env.BRANCH_NAME }}"
          exit 1
          fi
          echo "::set-output name=app_env::$APP_ENV"
      - name: "Checkout repository"
        uses: actions/checkout@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: "Install Setops"
        uses: setopsco/setup-setops@v2
        with:
          setops_client: ${{ env.SETOPS_CLIENT }}
          setops_username: ${{ secrets.SETOPS_USER }}
          setops_password: ${{ secrets.SETOPS_PASSWORD }}
      - name: "Login to SetOps registry"
        run: |
          LOGIN_COMMAND=$(setops registry:login | grep printf)
          eval $LOGIN_COMMAND
      - name: "Set git revision"
        run: |
          git rev-parse --short "$GITHUB_SHA" > .git_revision
      - name: Build and push app
        id: build_app
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.SETOPS_CLIENT }}.setops.net/${{ env.SETOPS_PROJECT }}/${{ steps.meta.outputs.app_env }}/${{ env.SETOPS_WEB_APP }}:latest
            ${{ env.SETOPS_CLIENT }}.setops.net/${{ env.SETOPS_PROJECT }}/${{ steps.meta.outputs.app_env }}/${{ env.SETOPS_WORKER_APP }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          no-cache: ${{ github.event_name == 'schedule' }}
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: SetOps Deployment
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/production' || github.ref == 'refs/heads/staging'
    timeout-minutes: 30
    steps:
      - name: "Prepare config"
        run: |
          echo "SETOPS_STAGE=${{ needs.build.outputs.app_env }}" >> $GITHUB_ENV
      - name: "Summarize Config"
        run: |
          echo "Branch name: ${{ env.BRANCH_NAME }}"
          echo "App env: ${{ needs.build.outputs.app_env }}"
          echo "Setops Project: ${{ env.SETOPS_PROJECT }}"
          echo "Setops Stage: ${{ env.SETOPS_STAGE }}"
          echo "Image Digest: ${{ needs.build.outputs.digest }}"
      - name: "Install Setops"
        uses: setopsco/setup-setops@v2
        with:
          setops_client: ${{ env.SETOPS_CLIENT }}
          setops_username: ${{ secrets.SETOPS_USER }}
          setops_password: ${{ secrets.SETOPS_PASSWORD }}
      - name: "Discard old Changeset"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} changeset:discard || true
      - name: "Create WEB release"
        run: |
          SETOPS_RELEASE_ID_WEB=$(setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --app ${{ env.SETOPS_WEB_APP }} release:create ${{ needs.build.outputs.digest }} | grep -o 'ReleaseID.*' | grep -o '[0-9].*')
          echo "SETOPS_RELEASE_ID_WEB=$SETOPS_RELEASE_ID_WEB" >> $GITHUB_ENV
      - name: "Create WORKER release"
        run: |
          SETOPS_RELEASE_ID_WORKER=$(setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --app ${{ env.SETOPS_WORKER_APP }} release:create ${{ needs.build.outputs.digest }} | grep -o 'ReleaseID.*' | grep -o '[0-9].*')
          echo "SETOPS_RELEASE_ID_WORKER=$SETOPS_RELEASE_ID_WORKER" >> $GITHUB_ENV
      - name: "Setops commit"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} changeset:info
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --output plain changeset:commit
      - name: "Run Migrations"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --app ${{ env.SETOPS_WEB_APP }} task:run --debug --release ${{ env.SETOPS_RELEASE_ID_WEB}} --entrypoint "/bin/bash" -- "bin/run_deploy_tasks"
      - name: "Activate WEB release"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --app ${{ env.SETOPS_WEB_APP }} release:activate ${{ env.SETOPS_RELEASE_ID_WEB }}
      - name: "Activate WORKER release"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --app ${{ env.SETOPS_WORKER_APP }} release:activate ${{ env.SETOPS_RELEASE_ID_WORKER }}
      - name: "Setops commit"
        run: |
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} changeset:info
          setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} --output plain changeset:commit
      - name: "Wait for Healthy WEB Container"
        timeout-minutes: 2
        run: |
          until setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} app:ps ${{ env.SETOPS_WEB_APP }} |grep -w -E "${{ env.SETOPS_RELEASE_ID_WEB }}.*HEALTHY"
          do
            echo "Container not up & healthy, retry in 5 seconds"
            sleep 5
          done
      - name: "Wait for Running WORKER Container"
        timeout-minutes: 2
        run: |
          until setops -p ${{ env.SETOPS_PROJECT }} -s ${{ env.SETOPS_STAGE }} app:ps ${{ env.SETOPS_WORKER_APP }} |grep -w -E "${{ env.SETOPS_RELEASE_ID_WORKER }}.*RUNNING"
          do
            echo "Container not up & healthy, retry in 5 seconds"
            sleep 5
          done
      - name: "Summarize Deployment"
        run: |
          echo "✅  Action succeeded!"
          echo "-------------------------"
          echo "Setops Web App: ${{ env.SETOPS_WEB_APP }}"
          echo "Setops Worker App: ${{ env.SETOPS_WORKER_APP }}"
          echo "Setops Project: ${{ env.SETOPS_PROJECT }}"
          echo "Setops Stage: ${{ env.SETOPS_STAGE }}"
          echo "Image Digest: ${{ needs.build.outputs.digest }}"
          echo "Release ID Web: ${{ env.SETOPS_RELEASE_ID_WEB }}"
          echo "Release ID Worker: ${{ env.SETOPS_RELEASE_ID_WORKER }}"
